name: Deploy P3 Lambda File Processor

on:
  push:
    branches: [main, dev]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Test Lambda function
        run: |
          cd lambda-code
          python -c "
          import lambda_function
          print('✅ Lambda function syntax is valid')
          
          # Basic functionality test
          test_event = {
              'httpMethod': 'POST',
              'body': '{\"test\": \"validation\"}',
              'path': '/process'
          }
          
          result = lambda_function.lambda_handler(test_event, {})
          print('✅ Function test passed')
          print('Status Code:', result.get('statusCode'))
          "

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/dev' || github.event_name == 'workflow_dispatch'
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS Connection
        run: |
          echo "🔑 Testing AWS credentials..."
          aws sts get-caller-identity
          echo "✅ AWS connection successful!"

      - name: Update Lambda Function (Dev)
        run: |
          cd lambda-code
          
          echo "📦 Creating Lambda package..."
          rm -rf lambda_function.zip
          zip lambda_function.zip lambda_function.py
          
          echo "🚀 Updating Lambda function..."
          aws lambda update-function-code \
            --function-name P3-lambda-file-processor \
            --zip-file fileb://lambda_function.zip
          
          echo "✅ Dev Lambda function updated!"

      - name: Test Production Deployment
        run: |
          echo "🚀 Testing Production Deployment..."
          
          # Create payload file for production test
          cat > prod-test-payload.json << 'EOF'
          {
            "httpMethod": "POST",
            "body": "{\"test\": \"production deployment\", \"source\": \"GitHub Actions Production\"}",
            "path": "/process"
          }
          EOF
          
          aws lambda invoke \
            --function-name P3-lambda-file-processor \
            --payload file://prod-test-payload.json \
            response.json
          
          echo "📄 Production Response:"
          cat response.json
          
          echo "✅ Production deployment successful!"

      - name: Production Summary
        run: |
          echo ""
          echo "🏆 === P3 Lambda File Processor - Production Deployment Complete! ==="
          echo ""
          echo "🎉 Project 3 Status: PRODUCTION READY"
          echo "✅ Serverless Architecture: DEPLOYED"
          echo "✅ CI/CD Pipeline: WORKING"
          echo "✅ Infrastructure as Code: COMPLETE"
          echo ""
          echo "🚀 Your DevOps Project Portfolio is Ready!"
  deploy-prod:
    name: Deploy to Production  
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Lambda Function (Prod)
        run: |
          cd lambda-code
          
          echo "📦 Creating Production Lambda package..."
          rm -rf lambda_function.zip
          zip lambda_function.zip lambda_function.py
          
          echo "🚀 Updating Production Lambda function..."
          aws lambda update-function-code \
            --function-name P3-lambda-file-processor \
            --zip-file fileb://lambda_function.zip
          
          echo "✅ Production Lambda function updated!"

      - name: Test Production Deployment
        run: |
          echo "🚀 Testing Production Deployment..."
          
          aws lambda invoke \
            --function-name P3-lambda-file-processor \
            --payload '{"httpMethod": "POST", "body": "{\"test\": \"production deployment\"}", "path": "/process"}' \
            response.json
          
          echo "📄 Production Response:"
          cat response.json
          
          echo "✅ Production deployment successful!"

      - name: Deployment Summary
        run: |
          echo ""
          echo "🎉 === P3 Lambda File Processor - Deployment Complete! ==="
          echo ""
          echo "📍 Resources:"
          echo "   • Lambda Function: P3-lambda-file-processor"
          echo "   • S3 Bucket: p3-lambda-file-processor-uploads"
          echo "   • API Gateway: https://5xk43i586d.execute-api.us-east-1.amazonaws.com/dev/process"
          echo ""
          echo "🧪 Test Your Deployment:"
          echo "   curl -X POST 'https://5xk43i586d.execute-api.us-east-1.amazonaws.com/dev/process' \\"
          echo "        -H 'Content-Type: application/json' \\"
          echo "        -d '{\"test\": \"manual\"}'"
          echo ""
          echo "✅ Project 3 Complete - Ready for Portfolio!"
